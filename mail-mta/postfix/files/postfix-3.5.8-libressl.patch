see https://bugs.gentoo.org/678874

--- a/src/tls/tls_certkey.c.orig	2019-03-07 23:57:10 UTC
+++ b/src/tls/tls_certkey.c
@@ -144,7 +144,7 @@ static void init_pem_load_state(pem_load
 
 /* use_chain - load cert, key and chain into ctx or ssl */
 
-#if OPENSSL_VERSION_NUMBER >= 0x1010100fUL
+#if OPENSSL_VERSION_NUMBER >= 0x1010100fUL && !defined(LIBRESSL_VERSION_NUMBER)
 static int use_chain(pem_load_state_t *st)
 {
     int     ret;
see https://bugs.gentoo.org/678874

--- a/src/tls/tls_server.c.orig	2018-12-26 19:21:49 UTC
+++ b/src/tls/tls_server.c
@@ -518,7 +518,9 @@ TLS_APPL_STATE *tls_server_init(const TL
 	 * ticket decryption callback already (since 2.11) asks OpenSSL to
 	 * avoid issuing new tickets when the presented ticket is re-usable.
 	 */
+#ifndef LIBRESSL_VERSION_NUMBER
 	SSL_CTX_set_num_tickets(server_ctx, 1);
+#endif
     }
 #endif
     if (!ticketable)
--- a/src/tls/tls_misc.c.orig
+++ b/src/tls/tls_misc.c
@@ -657,7 +657,7 @@ void    tls_param_init(void)
 
 int     tls_library_init(void)
 {
-    OPENSSL_INIT_SETTINGS *init_settings;
+    // OPENSSL_INIT_SETTINGS *init_settings;
     char   *conf_name = *var_tls_cnf_name ? var_tls_cnf_name : 0;
     char   *conf_file = 0;
     unsigned long init_opts = 0;
@@ -681,6 +681,7 @@ int     tls_library_init(void)
 	    msg_info("tls_library_init: using backwards-compatible defaults");
 	return (init_res = TLS_LIB_INIT_OK);
     }
+#if 0
     if ((init_settings = OPENSSL_INIT_new()) == 0) {
 	msg_warn("error allocating OpenSSL init settings, "
 		 "disabling TLS support");
@@ -763,6 +764,8 @@ int     tls_library_init(void)
 	TLS_LIB_INIT_RETURN(TLS_LIB_INIT_ERR);
     }
     TLS_LIB_INIT_RETURN(TLS_LIB_INIT_OK);
+#endif
+    return init_res = TLS_LIB_INIT_OK;
 }
 
 /* tls_pre_jail_init - Load TLS related pre-jail tables */
